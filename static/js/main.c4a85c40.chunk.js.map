{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","prevProps","name","props","console","log","toLocaleTimeString","clearInterval","setState","React","Component","App","isClockVisible","clockName","hideClock","showClock","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,EAAb,4MACEC,MAAQ,CAAEC,KAAM,IAAIC,MADtB,uDAGE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OANN,gCAUE,SAAmBC,GACbA,EAAUC,OAASL,KAAKM,MAAMD,KAMlCE,QAAQC,IAAR,qCACgCJ,EAAUC,KAD1C,eACqDL,KAAKM,MAAMD,OAN9DE,QAAQC,IAAIR,KAAKH,MAAMC,KAAKW,wBAZlC,kCAsBE,WACEC,cAAcV,KAAKC,WAvBvB,kBA0BE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SA5BhB,oBAgCE,WAAU,IACAD,EAASE,KAAKH,MAAdC,KAER,OACE,oCACGA,EAAKW,0BArCd,GAA2BG,IAAMC,WCyDlBC,G,MAxDf,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKN,SAAS,CAAEI,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKP,SAAS,CAAEI,gBAAgB,KAXpC,4CAcE,WAAU,IAAD,SAC+Bf,KAAKH,MAAnCkB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKG,UAAU,OACb,wBAAIA,UAAU,cAAd,eACA,yBAAKA,UAAU,SACZJ,GACC,kBAAC,EAAD,CAAOV,KAAMW,KAEjB,6BACE,4BACEG,UAAU,SACVC,KAAK,SACLC,QAASrB,KAAKiB,WAHhB,cAOA,4BACEE,UAAU,SACVC,KAAK,SACLC,QAASrB,KAAKkB,WAHhB,cAOA,4BACEC,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKV,SAAS,CACZK,UAAWM,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,SALvD,yBAvCV,GAAyBX,IAAMC,YCD/BY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c4a85c40.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = { date: new Date() };\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name === this.props.name) {\n      console.log(this.state.date.toLocaleTimeString());\n\n      return;\n    }\n\n    console.log(\n      `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        {date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h3 className=\"reactClock\">React clock</h3>\n        <div className=\"clock\">\n          {isClockVisible && (\n            <Clock name={clockName} />)}\n        </div>\n        <div>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                clockName: Math.floor(Math.random() * Math.floor(60)),\n              });\n            }}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}